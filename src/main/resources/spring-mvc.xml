<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"
    default-autowire="byName">
	<!-- 启用注解，并定义组件查找规则 ，mvc层只负责扫描@Controller -->
	<context:component-scan base-package="com.QuickStartFrame.management.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 设置freeMarker的配置文件路径 -->
  <bean id="freemarkerConfiguration"
      class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <!--注释掉的下方代码是指引freemarker的基本信息的配置位置，因为我已经将配置信息移到了applicationContext文件下，所以这里就没必要存在了，不注释也不会有问题的 -->
    <!--<property name="location" value="classpath:/WEB-INF/config/freemarker.properties" />-->
  </bean>

	<!-- 视图处理器 -->
	<!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
	</bean> -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    	<property name="exposeRequestAttributes" value="true" />
   	 	<property name="exposeSessionAttributes" value="true" />
   	 	<property name="viewClass">
     		 <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
   		 </property>
    	<property name="cache"><value>true</value></property>
  		  <!--这里需要注意一下，我注释了下面这样一行代码，这行代码的意思就是指引freemarker需要解析的文件的位置。注释掉原因是因为
    		 applicationContext.xml里有这样一行代码：<property name="templateLoaderPath" value="/WEB-INF/views/" /> 已经指定了视图位置。如果我们这里依然保留下方代码，页面回报406的找不到的错误 -->
   		 <!--<property name="prefix"><value>/WEB-INF/views/</value></property>-->
  		  <property name="suffix"><value>.html</value></property>
  		  <property name="contentType">
     		 <value>text/html; charset=UTF-8</value>
    	</property>
 	 </bean>

	<!-- servlet适配器，这里必须明确声明，因为spring默认没有初始化该适配器 -->
	<bean id="servletHandlerAdapter"
		class="org.springframework.web.servlet.handler.SimpleServletHandlerAdapter" />

	<!-- 会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter 两个bean,是spring 
		MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson） -->
	<mvc:annotation-driven />

	<!-- 资源访问处理器 -->
	<mvc:resources mapping="/static/**" location="/static/" />
	
	<bean id="handlerExceptionResolver"
    	class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="exceptionMappings">
	        <props>
	            <prop key="com.QuickStartFrame.management.exception.AuthorizationException">redirect:/login</prop>
	        </props>
	    </property>
	</bean>
</beans>